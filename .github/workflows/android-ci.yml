name: Android CI

on: [push]

env:
  IMAGE_NAME: client
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses
        run: |
          yes | sdkmanager --licenses || true

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
  tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v4
      #   with:
      #     distribution: "temurin"
      #     java-version: "17"

      # - name: Setup Android SDK
      #   uses: android-actions/setup-android@v3

      # - name: Accept licenses
      #   run: |
      #     yes | sdkmanager --licenses || true

      # - name: Change wrapper permissions
      #   run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew testDebugUnitTest jacocoTestReport

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  sonarqube:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for SonarQube to get all history

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v4
      #   with:
      #     distribution: "temurin"
      #     java-version: "17"

      # - name: Setup Android SDK
      #   uses: android-actions/setup-android@v3

      # - name: Change wrapper permissions
      #   run: chmod +x ./gradlew

      # - name: Run tests with coverage
      #   run: ./gradlew testDebugUnitTest jacocoTestReport

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew sonar

      - name: Check Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sleep 5 # Wait for SonarQube to process the results
          STATUS=$(curl -s -u ${SONAR_TOKEN}: "${SONAR_HOST_URL}/api/qualitygates/project_status?projectKey=your-project-key" | jq -r '.projectStatus.status')
          if [ "$STATUS" != "OK" ]; then
            echo "Quality Gate failed with status: $STATUS"
            exit 1
          fi

  docker_push:
    needs: sonarqube
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v3
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -t cr.yandex/${{ secrets.YC_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push cr.yandex/${{ secrets.YC_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
